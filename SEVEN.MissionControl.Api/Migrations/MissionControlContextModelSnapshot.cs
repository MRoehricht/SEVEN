// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SEVEN.MissionControl.Api.Data.Contexts;

#nullable disable

namespace SEVEN.MissionControl.Api.Migrations
{
    [DbContext(typeof(MissionControlContext))]
    partial class MissionControlContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SEVEN.Core.Models.Measurement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("MeasurementType")
                        .HasColumnType("integer");

                    b.Property<Guid>("ProbeId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Time")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ProbeId");

                    b.ToTable("Measurements");
                });

            modelBuilder.Entity("SEVEN.Core.Models.Probe", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("ApiKey")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("LastContact")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("MeasurementsType")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("SendingIntervalMinutes")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Probes");
                });

            modelBuilder.Entity("SEVEN.Core.Models.Rover", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Rovers");
                });

            modelBuilder.Entity("SEVEN.Core.Models.RoverTask", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("Command")
                        .HasColumnType("integer");

                    b.Property<int>("Position")
                        .HasColumnType("integer");

                    b.Property<Guid>("RoverId")
                        .HasColumnType("uuid");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<string>("StatusInfo")
                        .HasColumnType("text");

                    b.Property<DateTime?>("StatusUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("RoverId");

                    b.ToTable("RoverTasks");
                });

            modelBuilder.Entity("SEVEN.Core.Models.Measurement", b =>
                {
                    b.HasOne("SEVEN.Core.Models.Probe", "Probe")
                        .WithMany("Measurements")
                        .HasForeignKey("ProbeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Probe");
                });

            modelBuilder.Entity("SEVEN.Core.Models.RoverTask", b =>
                {
                    b.HasOne("SEVEN.Core.Models.Rover", "Rover")
                        .WithMany("Tasks")
                        .HasForeignKey("RoverId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rover");
                });

            modelBuilder.Entity("SEVEN.Core.Models.Probe", b =>
                {
                    b.Navigation("Measurements");
                });

            modelBuilder.Entity("SEVEN.Core.Models.Rover", b =>
                {
                    b.Navigation("Tasks");
                });
#pragma warning restore 612, 618
        }
    }
}
